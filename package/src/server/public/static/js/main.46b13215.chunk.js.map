{"version":3,"sources":["components/pages/print.tsx","images/elabLogo.svg","components/headers/header.tsx","popups/login.tsx","components/cards/mainFunctionCard.tsx","components/pages/mainFunctions.tsx","services/requests.ts","services/api.ts","App.tsx","index.tsx"],"names":["LabelType","HeaderComponent","textStyle","padding","AppBar","position","Toolbar","style","Typography","variant","paddingLeft","paddingRight","Box","fontWeight","src","elabLogo","alt","height","width","React","Component","LoginModal","props","passwordRef","loginRef","defaultLabel","elabService","state","username","password","open","error","label","loading","tried","msg","this","setState","Login","then","success","loginSuccess","loginFailed","catch","e","console","labelStyle","inputStyle","marginBottom","textFields","name","placeholder","onchange","target","value","type","onkeydown","key","focus","Modal","onClose","Grid","container","spacing","direction","alignItems","justify","outline","Card","component","align","color","item","justifyContent","map","f","TextField","onChange","onKeyDown","Button","disabled","onClick","login","ref","Fade","in","CircularProgress","size","thickness","Prod_LoginModal","ConcreteLoginModal","MainFunctionCard","mainText","settings","s","cardStyle","border","background","cursor","newStyle","Object","assign","theme","palette","primary","main","onMouseEnter","onHover","onMouseLeave","onLeave","MainFunctionsComponent","cardClicked","functions","clicked","marginTop","fn","PrintComponent","UPDATE_DELAY","labels","labelsRaw","printDisabled","printAllDisabled","lastChange","Date","now","sendingPrint","gettingData","split","isInteger","v","test","barcodes","filter","BarcodeLookup","data","newLabels","l","undefined","tokens","ret","id","CUSTOM","length","temp","shift","join","d","substring","SAMPLE","STORAGE_LOCATION","err","finally","sampleInputText","setTimeout","parseLabels","log","buttonStyle","margin","inputPlaceholder","alignContent","gutterBottom","multiline","onLabelInputChanged","rows","columns","field","hide","headerName","sortable","rowsPerPageOptions","onPageSizeChange","isRowSelectable","params","row","checkboxSelection","disableSelectionOnClick","disableColumnMenu","disableColumnFilter","disableColumnSelector","opacity","LinearProgress","onPrint","onPrintAll","RequestService","baseUrl","requester","axios","path","url","endsWith","body","post","genUrl","ApiService","clientID","firstname","lastname","ClientID","that","POST","Username","Password","raw","res","Code","FirstName","LastName","Promise","reject","b","makeBody","Barcodes","Results","Prod_ApiService","ApiServiceFactory","I","createTheme","contrastText","secondary","contrastThreshold","tonalOffset","App","defaultActiveComponent","GetApiService","makePrintComponent","mainFunctions","makeNextPage","toFunctionPage","activeComponent","document","getElementById","href","className","ReactDOM","render","StrictMode"],"mappings":"2JAMKA,E,+HCNU,MAA0B,qC,OCK5BC,EAAb,4JACI,WACI,IAAMC,EAAiC,CACnCC,QAAS,aAMb,OACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,qBAAKC,MAAOL,EAAZ,SACI,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAKF,MARD,CACpCG,YAAa,OACbC,aAAc,SAMF,SACI,cAACC,EAAA,EAAD,CAAKC,WAAW,iBAAhB,8BAKR,qBAAKC,IAAKC,EAAUC,IAAI,OAAOC,OAAO,OAAOC,MAAM,SACnD,qBAAKX,MAAOL,EAAZ,SACI,cAACM,EAAA,EAAD,CAAYC,QAAQ,YAApB,wCArBxB,GAAqCU,IAAMC,W,oECarBC,EAAtB,kDAMI,WAAYC,GAAoB,IAAD,8BAC3B,cAAMA,IANAC,iBAKqB,IAJrBC,cAIqB,IAHZC,aAAe,GAGH,EAFZC,iBAEY,EAG3B,EAAKC,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVC,MAAM,EACNC,OAAO,EACPC,MAAO,EAAKP,aACZQ,SAAS,EACTC,OAAO,GAGX,EAAKR,YAAcJ,EAAMI,YAbE,EANnC,+CAsBI,SAAsBS,GAAmC,IAAtBD,IAAqB,yDACpDE,KAAKC,SAAS,CACVN,OAAO,EACPC,MAAOG,EACPF,SAAS,EACTC,MAAOA,MA3BnB,0BA+BI,WACIE,KAAKC,SAAS,CAAEP,MAAM,EAAOG,SAAS,EAAOC,OAAO,MAhC5D,mBAmCI,WAAmB,IAAD,OAEVE,KAAKT,MAAMO,QACfE,KAAKC,SAAS,CAAEL,MAAO,GAAIC,SAAS,IAC9BG,KAAKT,MAAMC,UAAYQ,KAAKT,MAAME,SAKxCO,KAAKV,YAAYY,MAAMF,KAAKT,MAAMC,SAAUQ,KAAKT,MAAME,UAClDU,MAAK,YAAqB,IAAD,mBAAlBC,EAAkB,KAATL,EAAS,KAClBK,EACA,EAAKC,eAEL,EAAKC,YAAYP,MAEtBQ,OAAM,SAAAC,GACLC,QAAQd,MAAMa,GACd,EAAKF,YAAwB,kBAALE,EAAeA,EAAG,4CAA4C,MAb1FR,KAAKM,YAAY,6BAxC7B,qBAyDI,cAzDJ,oBA2DI,WAAuB,IAAD,OAcZI,EAAkC,GAClCC,EAAkC,CACpC7B,MAAO,OACP8B,aAAc,OAOZC,EAAa,CACf,CACIC,KAAM,WACNlB,MAAO,WACPmB,YAAa,WACbC,SAAU,SAACR,GACP,EAAKP,SAAS,CACVN,OAAO,EACPG,OAAO,EACPN,SAAUgB,EAAES,OAAOC,UAI/B,CACIJ,KAAM,WACNlB,MAAO,WACPmB,YAAa,QACbI,KAAM,WACNH,SAAU,SAACR,GACP,EAAKP,SAAS,CACVN,OAAO,EACPG,OAAO,EACPL,SAAUe,EAAES,OAAOC,SAG3BE,UAAW,SAACZ,GAAY,IAAD,EAAY,UAAVA,EAAEa,MAAF,UAAqB,EAAKjC,gBAA1B,OAAqB,EAAekC,YAIrE,OACI,cAACC,EAAA,EAAD,CAAO7B,KAAMM,KAAKT,MAAMG,KAAM8B,QAASxB,KAAKwB,QAASrD,MArDjB,GAqDpC,SACI,cAACsD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,SAASC,WAAW,SAASC,QAAQ,SAAS3D,MArDjD,CACvC4D,QAAS,cACTlD,OAAQ,QAmDJ,SACI,cAACmD,EAAA,EAAD,CAAM7D,MAjDqB,CACnC4D,QAAS,cACThE,QAAS,oBACTe,MAAO,QA8CC,SACI,eAAC2C,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAASF,UAAU,SAASzD,MA5CzB,GA4C+CwD,QAAS,EAAnF,UACI,cAACvD,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,UAAU,KAAKC,MAAM,SAAS/D,MAAOuC,EAA9D,mBAGA,cAACtC,EAAA,EAAD,CAAYC,QAAQ,YAAY6D,MAAM,SAASC,MAAM,QAAQhE,MAAOuC,EAApE,SACKV,KAAKT,MAAMK,QAEhB,cAAC6B,EAAA,EAAD,CAAMW,MAAI,EAACV,WAAS,EAACW,eAAe,SAAST,UAAU,SAAvD,SACI,+BACKf,EAAWyB,KAAI,SAACC,GAAD,OACZ,cAACd,EAAA,EAAD,CAAMW,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,CACI5C,MAAO2C,EAAE3C,MACTkB,KAAMyB,EAAEzB,KACRC,YAAawB,EAAExB,YACf5C,MAAOwC,EACPQ,KAAMoB,EAAEpB,KACRxB,MAAO,EAAKJ,MAAMI,MAClB8C,SAAUF,EAAEvB,SACZ0B,UAAWH,EAAEnB,aATLmB,EAAEzB,aAe9B,cAACW,EAAA,EAAD,CAAMC,WAAS,EAACI,QAAQ,SAAxB,SACI,eAACa,EAAA,EAAD,CACItE,QAAQ,YACR8D,MAAM,UACNhE,MAlEa,CACrCW,MAAO,QAkEiB8D,SAAU5C,KAAKT,MAAMM,QACrBgD,QAAS,WAAQ,EAAKC,SACtBC,IAAK,SAACvC,GAAa,EAAKpB,SAAWoB,GANvC,kBAQI,cAACwC,EAAA,EAAD,CACIC,GAAIjD,KAAKT,MAAMM,QADnB,SAEI,cAACqD,EAAA,EAAD,CAAkBC,KAAM,GAAIC,UAAW,EAAGjF,MAAO,CAC7CF,SAAU,kCAzJtD,GAAyCc,IAAMC,WAuKzCqE,E,4HAAwBpE,GAqBjBqE,EAA8CD,ECpM9CE,EAAb,kDAKI,WAAYrE,GAA+B,IAAD,uBACtC,cAAMA,IALFsE,cAIkC,IAHlCX,aAGkC,IAFlCY,cAEkC,EAEtC,IAAMC,EAAIxE,EAAMuE,SAFsB,OAItC,EAAKA,SAAWvE,EAAMuE,SACtB,EAAKD,SAAWE,EAAE5C,KAClB,EAAKvB,MAAQ,CACTqD,SAAUc,EAAEd,SACZe,UAAW,CACP7E,MAAO,QACPD,OAAQ,QACR+E,OAAQ,wBACRC,WAAYH,EAAEd,SAAU,YAAa,GACrCkB,OAAQJ,EAAEd,SAAU,GAAI,YAGhC,EAAKC,QAAU3D,EAAM2D,QAhBiB,EAL9C,2CAwBI,WACI,IAAI7C,KAAKT,MAAMqD,SAAf,CACA,IAAMmB,EAAgB,GACtBC,OAAOC,OAAOF,EAAU/D,KAAKT,MAAMoE,WACnCI,EAASH,OAAT,oBAA+B5D,KAAKd,MAAMgF,MAAMC,QAAQC,QAAQC,MAChErE,KAAKC,SAAS,CAAC0D,UAAWI,OA7BlC,qBAgCI,WACI,IAAI/D,KAAKT,MAAMqD,SAAf,CACA,IAAMmB,EAAgB,GACtBC,OAAOC,OAAOF,EAAU/D,KAAKT,MAAMoE,WACnCI,EAASH,OAAS,wBAClB5D,KAAKC,SAAS,CAAC0D,UAAWI,OArClC,oBAwCI,WAAuB,IAAD,OAMlB,OACI,cAAC/B,EAAA,EAAD,CACI7D,MAAO6B,KAAKT,MAAMoE,UAClBd,QAAS7C,KAAKT,MAAMqD,SAAU,aAAS,kBAAM,EAAKC,QAAQ,EAAKY,WAC/Da,aAAc,WAAK,EAAKC,WACxBC,aAAc,WAAK,EAAKC,WAJ5B,SAKI,cAAChD,EAAA,EAAD,CACIC,WAAS,EACTC,QAAS,EACTU,eAAe,SACfR,WAAW,SACXD,UAAU,SACVzD,MAjB0B,CAElCU,OAAQ,QASJ,SAQI,cAAC4C,EAAA,EAAD,CAAMW,MAAI,EAAV,SACI,cAAChE,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,UAAU,KAAnC,SACKjC,KAAKwD,qBA9DlC,GAAsCzE,IAAMC,WCA/B0F,EAAb,kDAGI,WAAYxF,GAAgC,IAAD,8BACvC,cAAMA,IAHFyF,iBAEmC,EAEvC,EAAKpF,MAAQ,CACTqF,UAAW1F,EAAM0F,WAErB,EAAKD,YAAczF,EAAM2F,QALc,EAH/C,0CAUI,WAAuB,IAAD,OAClB,OACI,cAACpD,EAAA,EAAD,CACItD,MAAO,CACH2G,UAAW,QAFnB,SAMI,cAACrD,EAAA,EAAD,CAAMC,WAAS,EAACW,eAAe,SAASV,QAAS,EAAjD,SACK3B,KAAKT,MAAMqF,UAAUtC,KAAI,SAACyC,GAAD,OACtB,cAACtD,EAAA,EAAD,CAAoBW,MAAI,EAAxB,SACI,cAAC,EAAD,CACI8B,MAAO,EAAKhF,MAAMgF,MAClBT,SAAUsB,EACVlC,QAAS,EAAK8B,eAJXI,EAAGjE,iBApBtC,GAA4C/B,IAAMC,W,4BLJ7CpB,K,gBAAAA,E,4BAAAA,E,kBAAAA,M,KAuBE,IAAMoH,EAAb,kDAII,WAAY9F,GAAoB,IAAD,8BAC3B,cAAMA,IAJFI,iBAGuB,IAFd2F,aAAe,IAI5B,EAAK3F,YAAcJ,EAAMI,YACzB,EAAKC,MAAQ,CACT2F,OAAQ,GACRC,UAAW,GAEXC,eAAe,EACfC,kBAAkB,EAClBC,WAAYC,KAAKC,MACjBC,cAAc,EACdC,aAAa,GAXU,EAJnC,+CAmBI,WAAuB,IAAD,OACZR,EAASlF,KAAKT,MAAM4F,UAAUQ,MAAM,MACpCC,EAAY,SAACC,GAAD,OAAgB,SAASC,KAAKD,IAE1CE,GADYb,EAAO5C,IAAIsD,GACZV,EAChBc,OAAOJ,IAER5F,KAAKV,YAAY2G,cAAcF,GAC9B5F,MAAK,SAAC+F,GACH,IAAMC,EAA0BjB,EAAO5C,KAAI,SAAC8D,GACxC,QAAeC,GAAXH,EAAKE,GAAiB,CACtB,IAAME,EAASF,EAAET,MAAM,KACjBY,EAAM,CACRC,GAAI,GACJ1F,KAAM,GACNK,KAAMvD,EAAU6I,QAEpB,GAAIH,EAAOI,OAAS,GAAKd,EAAUU,EAAO,IAAK,CAC3C,IAAMK,EAAOL,EAAOM,QACpBL,EAAIC,GAAKG,GAAY,GACrBJ,EAAIzF,KAAOwF,EAAOO,KAAK,UAEvBN,EAAIC,GAAK,GACTD,EAAIzF,KAAOsF,EAEf,OAAOG,EAGP,IAAMO,EAASZ,EAAKE,GACpB,MAAO,CACHI,GAAG,MAAD,OAAQJ,EAAEW,UAAU,KACtBjG,KAAMgG,EAAEhG,KACRK,KAAM2F,EAAC,SAAclJ,EAAUoJ,OAAQpJ,EAAUqJ,qBAI7D,EAAKhH,SAAS,CACViF,OAAQiB,OAEb5F,OAAM,SAAC2G,GACNzG,QAAQd,MAAMuH,MACfC,SAAQ,WACP,EAAKlH,SAAS,CACVyF,aAAa,OAIrB1F,KAAKC,SAAS,CACVyF,aAAa,MAnEzB,iCAuEI,SAA4BlF,GAAS,IAAD,OAC1B4G,EAAkB5G,EAAES,OAAOC,MACjClB,KAAKC,SAAS,CACVkF,UAAWiC,EACX9B,WAAYC,KAAKC,QAGrB6B,YAAW,WACK9B,KAAKC,MACP,EAAKjG,MAAM+F,YAAc,EAAKL,cACpC,EAAKqC,gBAEVtH,KAAKiF,gBAnFhB,qBAsFI,cAtFJ,wBA0FI,WACIxE,QAAQ8G,IAAIvH,KAAKT,MAAM4F,aA3F/B,oBA8FI,WAAuB,IAAD,OAoBZqC,EAAmC,CACrCC,OAAQ,eAENC,EAAmB,CACrB,SACA,kBACA,OACFb,KAAK,MACP,OACI,cAACpF,EAAA,EAAD,CAAMC,WAAS,EAACW,eAAe,SAASlE,MArBJ,CACpC2G,UAAW,MACXzC,eAAgB,SAChBR,WAAY,SACZ8F,aAAc,UAiBd,SACI,cAAC3F,EAAA,EAAD,CAAM7D,MAfyB,CAGnCJ,QAAS,OAYL,SACI,eAAC0D,EAAA,EAAD,CAAMC,WAAS,EAACE,UAAU,SAASD,QAAS,EAA5C,UACI,cAACF,EAAA,EAAD,CAAMW,MAAI,EAAV,SACI,cAAChE,EAAA,EAAD,CAAYC,QAAQ,KAAK4D,UAAU,KAAKC,MAAM,OAAO0F,cAAc,EAAMzJ,MAAO,GAAhF,4BAIJ,cAACsD,EAAA,EAAD,CAAMW,MAAI,EAAV,SACI,cAACI,EAAA,EAAD,CACI5C,MAAM,QACNmB,YAAa2G,EACbG,WAAS,EACTxJ,QAAQ,WACRF,MAAO,CAAEW,MAAO,QAChB2D,SAAU,SAACjC,GAAQ,EAAKsH,oBAAoBtH,QAIpD,eAACiB,EAAA,EAAD,CAAMW,MAAI,EAACjE,MAAO,CAAEU,OAAQ,QAASiD,QAAQ,SAA7C,UACI,cAACkB,EAAA,EAAD,CAAMC,GAAIjD,KAAKT,MAAMmG,YAAavH,MAAO,CACrCF,SAAU,WACV6G,UAAW,OAFf,SAII,cAAC5B,EAAA,EAAD,CAAkBC,KAAM,OAE5B,cAAC,IAAD,CACI4E,KAAM/H,KAAKT,MAAM2F,OACjB8C,QAxDY,CAChC,CAAEC,MAAO,WAAYC,MAAM,GAC3B,CAAED,MAAO,KAAME,WAAY,UAAWrJ,MAAO,IAAKsJ,UAAU,GAC5D,CAAEH,MAAO,OAAQE,WAAY,OAAQrJ,MAAO,IAAKsJ,UAAU,GAC3D,CAAEH,MAAO,OAAQE,WAAY,OAAQrJ,MAAO,IAAKsJ,UAAU,IAqDvCC,mBAAoB,CAAC,KACrBC,iBAAkB,aAClBC,gBAAiB,SAACC,GAAD,OAA4BA,EAAOC,IAAI7F,UACxD8F,mBAAiB,EACjBC,yBAAuB,EACvBC,mBAAiB,EACjBC,qBAAmB,EACnBC,uBAAqB,EACrB3K,MAAO,CAAC4K,QAAS/I,KAAKT,MAAMmG,YAAa,IAAM,KAEnD,cAACjE,EAAA,EAAD,CAAMW,MAAI,EAAV,SACI,cAACY,EAAA,EAAD,CAAMC,GAAIjD,KAAKT,MAAMkG,aAArB,SACI,cAACuD,EAAA,EAAD,WAIZ,eAACvH,EAAA,EAAD,CAAMW,MAAI,EAAV,UACI,cAACO,EAAA,EAAD,CACItE,QAAQ,YACR8D,MAAM,UACNS,SAAU5C,KAAKT,MAAM6F,cACrBjH,MAAOqJ,EACP3E,QAAS,kBAAM,EAAKoG,WALxB,mBAQA,cAACtG,EAAA,EAAD,CACItE,QAAQ,YACR8D,MAAM,UACNS,SAAU5C,KAAKT,MAAM8F,iBACrBlH,MAAOqJ,EACP3E,QAAS,kBAAM,EAAKqG,cALxB,qCAjL5B,GAAoCnK,IAAMC,W,kBMxB7BmK,EAAb,WAII,aAAmC,IAAvBC,EAAsB,uDAAJ,GAAI,yBAHjBA,aAGiB,OAFjBC,eAEiB,EAC9BrJ,KAAKoJ,QAAUA,EACfpJ,KAAKqJ,UAAYC,IANzB,0CA8BI,SAAeC,GACX,IAAMC,EAAG,UAAMxJ,KAAKoJ,QAAX,YAAsBG,GAC/B,OAAOC,EAAIC,SAAS,KAAMD,EAAIzC,UAAU,EAAGyC,EAAI9C,OAAS,GAAI8C,IAhCpE,kBA6CI,YAAmD,IAAD,IAArCD,YAAqC,MAA9B,GAA8B,MAA1BG,YAA0B,MAAnB,GAAmB,EAC9C,OAAO1J,KAAKqJ,UAAUM,KAAK3J,KAAK4J,OAAOL,GAAOG,OA9CtD,KCDsBG,EAAtB,WAMI,aAAe,yBALLC,cAKI,OAJJC,eAII,OAHJC,cAGI,OAFGX,eAEH,EAGVrJ,KAAKqJ,UAAY,IAAIF,EAAe,UACpCnJ,KAAK8J,SAAW,GAChB9J,KAAK+J,UAAY,GACjB/J,KAAKgK,SAAW,GAZxB,4CAeI,SAAiBN,GAGb,OAFAA,EAAKO,SAAWjK,KAAK8J,SAEdJ,IAlBf,mBAqBI,SAAalK,EAAkBC,GAC3B,IAAMyK,EAAOlK,KACb,OAAOA,KAAKqJ,UAAUc,KAAK,CACvBZ,KAAM,QACNG,KAAM,CACFU,SAAU5K,EACV6K,SAAU5K,KAGjBU,MAAK,SAAAmK,GACF,IAAMC,EAAMD,EAAIpE,KAChB,OAAOqE,EAAIC,MACP,KAAK,IAKD,OAJAN,EAAKJ,SAAWS,EAAIN,SACpBC,EAAKH,UAAYQ,EAAIE,UACrBP,EAAKF,SAAWO,EAAIG,SAEb,EAAC,EAAM,IAClB,KAAK,IACD,MAAO,EAAC,EAAO,+BACnB,QACI,OAAOC,QAAQC,OAAO,oCA1C1C,2BA+CI,SAAqB7E,GACjB,IAAM8E,EAAI7K,KAAK8K,SAAS,CACpBC,SAAUhF,IAEd,OAAO/F,KAAKqJ,UAAUc,KAAK,CACvBZ,KAAM,WACNG,KAAMmB,IACP1K,MAAK,SAAAmK,GAEJ,OADYA,EAAIpE,KAAK8E,eAvDjC,KA6DMC,E,4HAAwBpB,GAWjBqB,EAAb,kGAGI,WAKI,OAJIlL,KAAKmL,IACLnL,KAAKmL,EAAiC,IAAIF,GAGvCjL,KAAKmL,MARpB,KAAaD,EACMC,O,ECjEnB,IAAMjH,EAAQkH,YAAY,CACxBjH,QAAS,CACPC,QAAS,CACPC,KAAM,UACNgH,aAAc,SAEhBC,UAAW,CACTjH,KAAM,WAERkH,kBAAmB,EACnBC,YAAa,MAQJC,EAAb,kDAIE,WAAYvM,GAAkB,IAAD,uBAC3B,cAAMA,IAJAwM,4BAGqB,IAFrBpM,iBAEqB,EAE3B,EAAKA,YAAc4L,EAAkBS,gBAErC,IAAMC,EAAqB,kBAAM,cAAC,EAAD,CAAgBtM,YAAa,EAAKA,eAC7DuM,EAA4C,CAChD,CACE/K,KAAM,QACN8B,UAAU,EACVkJ,aAAcF,GAEhB,CACE9K,KAAM,uBACN8B,UAAU,IAba,OAgB3B,EAAK8I,uBACH,cAAC,EAAD,CACExH,MAAOA,EACPU,UAAWiH,EACXhH,QAAS,SAACpB,GAAD,OAAwC,EAAKsI,eAAetI,MAEzE,EAAKlE,MAAQ,CACXyM,gBAA8C,EAAKN,wBAvB1B,EAJ/B,kDA+BE,SAAuBjI,GACjBA,GAAYA,EAASqI,cACvB9L,KAAKC,SAAS,CAAC+L,gBAAiBvI,EAASqI,mBAjC/C,oBAqCE,WAGE,OAFiBG,SAASC,eAAe,WACrCC,KAAO,gBAET,cAAC,IAAD,CAAkBjI,MAAOA,EAAzB,SACE,sBAAKkI,UAAU,gBAAf,UACA,cAAC,EAAD,IACA,cAAC9I,EAAD,CAAoBhE,YAAaU,KAAKV,cACrCU,KAAKT,MAAMyM,yBA7CpB,GAAyBjN,IAAMC,W,cCxB/BqN,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,SAASC,eAAe,W","file":"static/js/main.46b13215.chunk.js","sourcesContent":["import React from \"react\";\nimport { PrintProps } from '../../models/props';\nimport { Typography, TextField, Grid, Card, Button, LinearProgress, Fade, CircularProgress } from '@material-ui/core';\nimport { DataGrid, GridColDef, GridRowParams } from '@material-ui/data-grid';\nimport { ApiService } from \"../../services/api\";\n\nenum LabelType {\n    SAMPLE = 'Sample',\n    STORAGE_LOCATION = 'Location',\n    CUSTOM = 'Unknown',\n}\n\ninterface SampleInfo {\n    id: string // barcode\n    name: string\n    type: LabelType\n    disabled?: boolean\n}\n\ninterface PrintState {\n    labels: SampleInfo[]\n    labelsRaw: string\n    printDisabled: boolean\n    printAllDisabled: boolean\n    lastChange: number\n    sendingPrint: boolean\n    gettingData: boolean\n}\n\nexport class PrintComponent extends React.Component<PrintProps, PrintState> {\n    private elabService: ApiService\n    private readonly UPDATE_DELAY = 650;\n\n    constructor(props: PrintProps) {\n        super(props)\n        this.elabService = props.elabService\n        this.state = {\n            labels: [],\n            labelsRaw: '',\n            // labelsRaw: '',\n            printDisabled: true,\n            printAllDisabled: false,\n            lastChange: Date.now(),\n            sendingPrint: false,\n            gettingData: false,\n        }\n    }\n\n    private parseLabels() {\n        const labels = this.state.labelsRaw.split('\\n')\n        const isInteger = (v: string) => !/[^0-9]/.test(v)\n        const isBarcode = labels.map(isInteger)\n        const barcodes = labels\n        .filter(isInteger)\n\n        this.elabService.BarcodeLookup(barcodes)\n        .then((data)=>{\n            const newLabels: SampleInfo[] = labels.map((l) => {\n                if (data[l] == undefined) {\n                    const tokens = l.split(' ')\n                    const ret = {\n                        id: '',\n                        name: '',\n                        type: LabelType.CUSTOM,\n                    }\n                    if (tokens.length > 1 && isInteger(tokens[0])) {\n                        const temp = tokens.shift();\n                        ret.id = temp? temp: ''\n                        ret.name = tokens.join(' ');\n                    } else {\n                        ret.id = ''\n                        ret.name = l\n                    }\n                    return ret\n                } else {\n                    // console.log(data[l])\n                    const d: any = data[l]\n                    return {\n                        id: `...${l.substring(10,)}`,\n                        name: d.name,\n                        type: d['sampleID']? LabelType.SAMPLE: LabelType.STORAGE_LOCATION,\n                    }\n                }\n            })\n            this.setState({\n                labels: newLabels\n            })\n        }).catch((err)=>{\n            console.error(err);\n        }).finally(()=>{\n            this.setState({\n                gettingData: false\n            })\n        })\n\n        this.setState({\n            gettingData: true\n        })\n    }\n\n    private onLabelInputChanged(e: any) {\n        const sampleInputText = e.target.value;\n        this.setState({\n            labelsRaw: sampleInputText,\n            lastChange: Date.now()\n        })\n\n        setTimeout(() => {\n            const now = Date.now()\n            if (now - this.state.lastChange >= this.UPDATE_DELAY) {\n                this.parseLabels()\n            }\n        }, this.UPDATE_DELAY);\n    }\n\n    private onPrint() {\n\n    }\n\n    private onPrintAll() {\n        console.log(this.state.labelsRaw)\n    }\n\n    render(): JSX.Element {\n        const sampleColumns: GridColDef[] = [\n            { field: 'disabled', hide: true },\n            { field: 'id', headerName: 'Barcode', width: 100, sortable: false },\n            { field: 'name', headerName: 'Name', width: 400, sortable: false },\n            { field: 'type', headerName: 'Type', width: 100, sortable: false },\n        ]\n\n        const outerStyle: React.CSSProperties = {\n            marginTop: '5vh',\n            justifyContent: 'center',\n            alignItems: 'center',\n            alignContent: 'center',\n            // border: '1px solid orange'\n        }\n        const cardStyle: React.CSSProperties = {\n            // border: '1px solid green',\n            // width: '80vw',\n            padding: '2em',\n        }\n        const buttonStyle: React.CSSProperties = {\n            margin: '0 1em 0 1em'\n        }\n        const inputPlaceholder = [\n            'box 23',\n            '005000000123456',\n            '...'\n        ].join('\\n')\n        return (\n            <Grid container justifyContent='center' style={outerStyle}>\n                <Card style={cardStyle}>\n                    <Grid container direction=\"column\" spacing={3}>\n                        <Grid item>\n                            <Typography variant=\"h5\" component=\"h2\" align=\"left\" gutterBottom={true} style={{}}>\n                                Print Labels\n                            </Typography>\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                label=\"Items\"\n                                placeholder={inputPlaceholder}\n                                multiline\n                                variant=\"outlined\"\n                                style={{ width: '70em' }}\n                                onChange={(e) => { this.onLabelInputChanged(e) }}\n                            >\n                            </TextField>\n                        </Grid>\n                        <Grid item style={{ height: '30em'}} justify=\"center\">\n                            <Fade in={this.state.gettingData} style={{\n                                position: 'absolute',\n                                marginTop: '5em',\n                            }}>\n                                <CircularProgress size={50}/>\n                            </Fade>\n                            <DataGrid\n                                rows={this.state.labels}\n                                columns={sampleColumns}\n                                rowsPerPageOptions={[100]}\n                                onPageSizeChange={() => {}}\n                                isRowSelectable={(params: GridRowParams) => !params.row.disabled}\n                                checkboxSelection\n                                disableSelectionOnClick\n                                disableColumnMenu\n                                disableColumnFilter\n                                disableColumnSelector\n                                style={{opacity: this.state.gettingData? 0.25: 1}}\n                            />\n                            <Grid item>\n                                <Fade in={this.state.sendingPrint}>\n                                    <LinearProgress />\n                                </Fade>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={this.state.printDisabled}\n                                style={buttonStyle}\n                                onClick={() => this.onPrint()}>\n                                Print\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={this.state.printAllDisabled}\n                                style={buttonStyle}\n                                onClick={() => this.onPrintAll()}>\n                                Print All\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Card>\n            </Grid>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/elabLogo.6161d4d0.svg\";","import React from 'react';\n// import './header.css';\nimport { AppBar, Toolbar, Typography, Box } from '@material-ui/core';\nimport elabLogo from '../../images/elabLogo.svg'\n\nexport class HeaderComponent extends React.Component {\n    render(): JSX.Element {\n        const textStyle: React.CSSProperties = {\n            padding: '2vh 0.5vw'\n        }\n        const titleStyle: React.CSSProperties = {\n            paddingLeft: '10vw',\n            paddingRight: '0.2vw'\n        }\n        return (\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <div style={textStyle}>\n                        <Typography variant='h4' style={titleStyle}>\n                            <Box fontWeight='fontWeightBold'>\n                                Limes Portal\n                            </Box>\n                        </Typography>\n                    </div>\n                    <img src={elabLogo} alt='eLab' height='40vw' width='40vw'/>\n                    <div style={textStyle}>\n                        <Typography variant=\"subtitle1\">\n                            Powered by eLab\n                        </Typography>\n                    </div>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}","import React from 'react';\nimport { LoginProps } from '../models/props';\nimport { Modal, Grid, TextField, Button, CircularProgress, Fade, Typography, Card} from '@material-ui/core';\nimport { ApiService } from '../services/api';\n\nimport { DEBUG } from '../config'\nimport { U, P } from '../credentials/elab'\n\ninterface LoginState {\n    username: string\n    password: string\n    open: boolean\n    error: boolean\n    label: string\n    loading: boolean\n    tried: boolean\n}\n\nexport abstract class LoginModal extends React.Component<LoginProps, LoginState> {\n    protected passwordRef: any\n    protected loginRef: any\n    protected readonly defaultLabel = \"\"\n    protected readonly elabService: ApiService\n\n    constructor(props: LoginProps) {\n        super(props)\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            open: true,\n            error: false,\n            label: this.defaultLabel,\n            loading: false,\n            tried: false,\n        }\n\n        this.elabService = props.elabService;\n    }\n\n    protected loginFailed(msg: string, tried: boolean=true) {\n        this.setState({\n            error: true,\n            label: msg,\n            loading: false,\n            tried: tried,\n        })\n    }\n\n    protected loginSuccess() {\n        this.setState({ open: false, loading: false, tried: false })\n    }\n\n    protected login() {\n        // console.log([this.state.username, this.state.password])\n        if (this.state.tried) { return }\n        this.setState({ label: '', loading: true})\n        if (!(this.state.username && this.state.password)) {\n            this.loginFailed('fields cannot be empty')\n            return\n        }\n\n        this.elabService.Login(this.state.username, this.state.password)\n            .then(([success, msg]) => {\n                if (success) {\n                    this.loginSuccess()\n                } else {\n                    this.loginFailed(msg)\n                }\n            }).catch(e => {\n                console.error(e)\n                this.loginFailed(typeof(e)==='string'? e: 'No response. Are you on the UBC network?', false)\n            })\n    }\n\n    private onClose() { }\n\n    render(): JSX.Element {\n        const modalStyle: React.CSSProperties = {}\n        const mainGridStyle: React.CSSProperties = {\n            outline: 'transparent',\n            height: '100%',\n            // border: '1px solid red'\n        }\n        const cardStyle: React.CSSProperties = {\n            outline: 'transparent',\n            padding: '1em 2em 1.2em 2em', // t r b l\n            width: '25em',\n            // height: '20em',\n        }\n        const cardGridStyle: React.CSSProperties = {}\n        const labelStyle: React.CSSProperties = {}\n        const inputStyle: React.CSSProperties = {\n            width: '100%',\n            marginBottom: '1em',\n            // border: '1px solid red'\n        }\n        const buttonStyle: React.CSSProperties = {\n            width: '10em',\n        }\n\n        const textFields = [\n            {\n                name: \"username\",\n                label: \"Username\",\n                placeholder: \"username\",\n                onchange: (e: any) => {\n                    this.setState({\n                        error: false,\n                        tried: false,\n                        username: e.target.value\n                    })\n                },\n            },\n            {\n                name: \"password\",\n                label: \"Password\",\n                placeholder: \"*****\",\n                type: \"password\",\n                onchange: (e: any) => {\n                    this.setState({\n                        error: false,\n                        tried: false,\n                        password: e.target.value\n                    })\n                },\n                onkeydown: (e: any) => { e.key === \"Enter\" && this.loginRef?.focus() },\n            }\n        ]\n\n        return (\n            <Modal open={this.state.open} onClose={this.onClose} style={modalStyle}>\n                <Grid container spacing={0} direction=\"column\" alignItems=\"center\" justify=\"center\" style={mainGridStyle}>\n                    <Card style={cardStyle}>\n                        <Grid container justify=\"center\" direction=\"column\" style={cardGridStyle} spacing={0}>\n                            <Typography variant=\"h5\" component=\"h2\" align=\"center\" style={labelStyle}>\n                                Login\n                            </Typography>\n                            <Typography variant=\"subtitle1\" align=\"center\" color=\"error\" style={labelStyle}>\n                                {this.state.label}\n                            </Typography>\n                            <Grid item container justifyContent=\"center\" direction=\"column\">\n                                <form>\n                                    {textFields.map((f) => (\n                                        <Grid item key={f.name}>\n                                            <TextField\n                                                label={f.label}\n                                                name={f.name}\n                                                placeholder={f.placeholder}\n                                                style={inputStyle}\n                                                type={f.type}\n                                                error={this.state.error}\n                                                onChange={f.onchange}\n                                                onKeyDown={f.onkeydown}\n                                            />\n                                        </Grid>\n                                    ))}\n                                </form>\n                            </Grid>\n                            <Grid container justify=\"center\" >\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={buttonStyle}\n                                    disabled={this.state.loading}\n                                    onClick={() => { this.login() }}\n                                    ref={(e: any) => { this.loginRef = e }}>\n                                    Login\n                                    <Fade\n                                        in={this.state.loading}>\n                                        <CircularProgress size={20} thickness={5} style={{\n                                            position: 'absolute'\n\n                                        }}/>\n                                    </Fade>\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n            </Modal>\n        )\n    }\n}\n\nclass Prod_LoginModal extends LoginModal {\n\n}\n\nclass Dev_LoginModal extends LoginModal {\n    constructor(props: LoginProps) {\n        super(props)\n\n        this.state = {\n            username: U,\n            password: P,\n            open: false,\n            error: false,\n            label: this.defaultLabel,\n            loading: false,\n            tried: false,\n        }\n        \n    }\n}\n\nexport const ConcreteLoginModal = DEBUG ? Dev_LoginModal : Prod_LoginModal","import React from 'react';\n// import \"./mainFunctionCard.css\"\nimport { Typography, Grid, Card } from '@material-ui/core';\nimport { MainFunctionCardProps, MainFunctionCardSettings } from '../../models/props';\n\ninterface MainFunctionCardState {\n    disabled: boolean\n    cardStyle: React.CSSProperties\n}\n\nexport class MainFunctionCard extends React.Component<MainFunctionCardProps, MainFunctionCardState> {\n    private mainText: string;\n    private onClick: (settings: MainFunctionCardSettings) => void;\n    private settings: MainFunctionCardSettings;\n\n    constructor(props: MainFunctionCardProps) {\n        super(props);\n        const s = props.settings\n\n        this.settings = props.settings\n        this.mainText = s.name\n        this.state = {\n            disabled: s.disabled,\n            cardStyle: {\n                width: '200px',\n                height: '200px',\n                border: '2px solid transparent',\n                background: s.disabled? 'lightgrey': '',\n                cursor: s.disabled? '': 'pointer',\n            }\n        }\n        this.onClick = props.onClick\n    }\n\n    private onHover() {\n        if (this.state.disabled) return\n        const newStyle: any = {}\n        Object.assign(newStyle, this.state.cardStyle)\n        newStyle.border = `2px solid ${this.props.theme.palette.primary.main}`\n        this.setState({cardStyle: newStyle})\n    }\n\n    private onLeave() {\n        if (this.state.disabled) return\n        const newStyle: any = {}\n        Object.assign(newStyle, this.state.cardStyle)\n        newStyle.border = '2px solid transparent'\n        this.setState({cardStyle: newStyle})\n    }\n\n    render(): JSX.Element {\n        const colStyle: React.CSSProperties = {\n            // border: '1px solid red'\n            height: '100%'\n        }\n\n        return (\n            <Card\n                style={this.state.cardStyle}\n                onClick={this.state.disabled? ()=>{} : () => this.onClick(this.settings)}\n                onMouseEnter={()=>{this.onHover()}}\n                onMouseLeave={()=>{this.onLeave()}}>\n                <Grid\n                    container\n                    spacing={0}\n                    justifyContent='center'\n                    alignItems='center'\n                    direction='column'\n                    style={colStyle}\n                >\n                    <Grid item>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            {this.mainText}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Card>\n        )\n    }\n}","import React from \"react\";\n// import \"./mainFunctionsGrid.css\"\nimport { Grid } from \"@material-ui/core\";\nimport { MainFunctionCard } from \"../cards/mainFunctionCard\";\nimport { MainFunctionsGridProps, MainFunctionCardSettings } from \"../../models/props\";\n\ninterface MainFunctionsState {\n    functions: MainFunctionCardSettings[]\n}\n\nexport class MainFunctionsComponent extends React.Component<MainFunctionsGridProps, MainFunctionsState> {\n    private cardClicked: (settings: MainFunctionCardSettings)=>void\n\n    constructor(props: MainFunctionsGridProps) {\n        super(props)\n        this.state = {\n            functions: props.functions,\n        }\n        this.cardClicked = props.clicked\n    }\n    render(): JSX.Element {\n        return (\n            <Grid\n                style={{\n                    marginTop: '10vh',\n                    // border: '1px solid red'\n                }}\n            >\n                <Grid container justifyContent='center' spacing={5}>\n                    {this.state.functions.map((fn) => (\n                        <Grid key={fn.name} item>\n                            <MainFunctionCard\n                                theme={this.props.theme}\n                                settings={fn}\n                                onClick={this.cardClicked}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grid>\n        )\n    }\n}","import axios, { AxiosStatic } from \"axios\";\n\nexport const GET = 'GET'\nexport const POST = 'POST'\n\nexport class RequestService {\n    private readonly baseUrl: string\n    private readonly requester: AxiosStatic\n\n    constructor(baseUrl: string = '') {\n        this.baseUrl = baseUrl;\n        this.requester = axios\n\n        // const ep = 'call'\n        // console.log('start')\n        // axios.post(`api/d1/${ep}`, {\n        //     ProviderName: 'elab',\n        //     RequestPayload: {\n        //         TargetEndpoint: 'auth/user',\n        //         Method: 'POST',\n        //         Body: {\n        //             username: username,\n        //             password: password\n        //         }\n        //     }\n        // }).then(x => {\n        //     console.log(x)\n        // }).catch(e => {\n        //     console.log('err')\n        //     console.log(e)\n        // }).finally(() => {\n        //     console.log('done')\n        // })\n    }\n\n    private genUrl(path: string) {\n        const url = `${this.baseUrl}/${path}`\n        return url.endsWith('/')? url.substring(0, url.length - 1): url;\n    }\n\n    // public GET(path: string): Promise<any> {\n    //     console.log(this.genUrl(path))\n    //     return this.requester.get(this.ge`${this.baseUrl}/${path}`nUrl(path)).then(x => {\n    //         console.log(x)\n    //         return 'done'\n    //     }).catch(e => {\n    //         console.log(e)\n    //     })\n    // }\n\n    public POST({path = '', body = {}}): Promise<any> {\n        return this.requester.post(this.genUrl(path), body)\n    }\n}","import { RequestService, POST } from \"./requests\"\nimport { U, P, T } from \"../credentials/elab\"\nimport { DEBUG } from \"../config\"\n\nexport abstract class ApiService {\n    protected clientID: string\n    protected firstname: string\n    protected lastname: string\n    private readonly requester: RequestService\n\n    constructor() {\n        // actually threading through server due to CORS security\n        // does not significantly slow requests\n        this.requester = new RequestService('api/d1')\n        this.clientID = ''\n        this.firstname = ''\n        this.lastname = ''\n    }\n\n    private makeBody(body: any) {\n        body.ClientID = this.clientID;\n        // console.log(this.clientID)\n        return body\n    }\n\n    public Login(username: string, password: string): Promise<[boolean, string]> {\n        const that = this\n        return this.requester.POST({\n            path: 'login',\n            body: {\n                Username: username,\n                Password: password\n            }\n        })\n        .then(raw => {\n            const res = raw.data;\n            switch(res.Code) {\n                case 200:\n                    that.clientID = res.ClientID\n                    that.firstname = res.FirstName\n                    that.lastname = res.LastName\n                    // console.log(that)\n                    return [true, '']\n                case 401:\n                    return [false, 'Incorrect username/password']\n                default:\n                    return Promise.reject('Oops, something crashed...')\n            }\n        })\n    }\n\n    public BarcodeLookup(barcodes: string[]): Promise<any> {\n        const b = this.makeBody({\n            Barcodes: barcodes\n        })\n        return this.requester.POST({\n            path: 'barcodes',\n            body: b\n        }).then(raw => {\n            const res = raw.data.Results;\n            return res;\n        })\n    }\n}\n\nclass Prod_ApiService extends ApiService {\n\n}\n\nclass Dev_ApiService extends ApiService {\n    constructor() {\n        super()\n        this.Login(U, P)\n    }\n}\n\nexport class ApiServiceFactory {\n    private static I: ApiService\n\n    public static GetApiService() {\n        if(!this.I) {\n            this.I = DEBUG? new Dev_ApiService(): new Prod_ApiService()\n        }\n\n        return this.I\n    }\n}","// import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport { MuiThemeProvider, createTheme } from '@material-ui/core/styles';\nimport { HeaderComponent } from './components/headers/header';\nimport { ConcreteLoginModal } from './popups/login';\nimport { MainFunctionsComponent } from './components/pages/mainFunctions';\nimport { PrintComponent } from './components/pages/print';\nimport { AppProps, MainFunctionCardSettings } from './models/props';\nimport { ApiService, ApiServiceFactory } from './services/api';\nimport { DEBUG } from './config'\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#00abab',\n      contrastText: 'white'\n    },\n    secondary: {\n      main: '#98ff6d',\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n});\n\ninterface AppState {\n  activeComponent: any\n}\n\nexport class App extends React.Component<AppProps, AppState> {\n  private defaultActiveComponent: any\n  private elabService: ApiService\n\n  constructor(props: AppProps) {\n    super(props)\n    this.elabService = ApiServiceFactory.GetApiService()\n\n    const makePrintComponent = () => <PrintComponent elabService={this.elabService}/>\n    const mainFunctions: MainFunctionCardSettings[] = [\n      {\n        name: 'Print',\n        disabled: false,\n        makeNextPage: makePrintComponent\n      },\n      {\n        name: 'Scanner coming soon!',\n        disabled: true,\n      }\n    ]\n    this.defaultActiveComponent = (\n      <MainFunctionsComponent\n        theme={theme}\n        functions={mainFunctions}\n        clicked={(settings: MainFunctionCardSettings) => this.toFunctionPage(settings)}\n      />)\n    this.state = {\n      activeComponent: DEBUG? makePrintComponent(): this.defaultActiveComponent,\n    }\n  }\n\n  private toFunctionPage(settings: MainFunctionCardSettings) {\n    if (settings && settings.makeNextPage) {\n      this.setState({activeComponent: settings.makeNextPage()})\n    }\n  }\n\n  render(): JSX.Element {\n    const fav: any = document.getElementById(\"favicon\");\n    fav.href = '/forcefavicon'\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div className='app-container'>\n        <HeaderComponent />\n        <ConcreteLoginModal elabService={this.elabService}/>\n        {this.state.activeComponent}\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport './index.css';\nimport '@fontsource/roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}